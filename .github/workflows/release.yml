name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get dependencies
        run: |
          go mod download
          go mod verify

      - name: Build binaries
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Building version $VERSION"
          
          # Build for multiple platforms
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=$VERSION -s -w" -o cli-recover-darwin-amd64 ./cmd/cli-recover
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=$VERSION -s -w" -o cli-recover-darwin-arm64 ./cmd/cli-recover
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=$VERSION -s -w" -o cli-recover-linux-amd64 ./cmd/cli-recover
          GOOS=linux GOARCH=arm64 go build -ldflags "-X main.version=$VERSION -s -w" -o cli-recover-linux-arm64 ./cmd/cli-recover

      - name: Generate checksums
        run: |
          sha256sum cli-recover-* > checksums.txt
          cat checksums.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## CLI-Recover ${{ github.ref }}
            
            ### Installation
            
            1. Download the binary for your platform
            2. Make it executable: `chmod +x cli-recover-*`
            3. Move to your PATH: `sudo mv cli-recover-* /usr/local/bin/cli-recover`
            
            ### Supported Platforms
            - macOS (Intel): `cli-recover-darwin-amd64`
            - macOS (Apple Silicon): `cli-recover-darwin-arm64`
            - Linux (x64): `cli-recover-linux-amd64`
            - Linux (ARM64): `cli-recover-linux-arm64`
          draft: false
          prerelease: false

      - name: Upload macOS Intel binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cli-recover-darwin-amd64
          asset_name: cli-recover-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cli-recover-darwin-arm64
          asset_name: cli-recover-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Linux x64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cli-recover-linux-amd64
          asset_name: cli-recover-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cli-recover-linux-arm64
          asset_name: cli-recover-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain